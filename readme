1 simple_cloud_* 是没用eureka的普通位服务的例子
2 eureka_server_single,eureka_service_provider_single 服务，服务提供发现

3 *-v1 是针对eureka的服务注册和负载均衡（默认的附载均衡是轮循） 
  注意点 在使用虚拟ip（String result = restTemplate.getForObject("http://USER-V1/user/"+id, String.class);） 其中（USER-V1） spring.application.name不能包含_ 
   resttemplate 必须加	@LoadBalanced 这个注解
  否则调用会报错
  
  
4. 测试ribbon 默认的负载均衡是轮训 启动顺序是 eureka_server_v1 -〉 movie_v1 -〉user_v1 ——〉user_v1 （改端口） 

5.测试ribbon 自定义负载均衡规则 启动顺序是 eureka_server_v1 -〉 movie_ribbon_v1 -〉user_v1 ——〉user_v1 （改端口）  ——〉user-v2（user-v1 改application.name 改port） r-v2（user-v1 改application.name 改port）
 请求test endpoint
  
  